Iniciaremos git en nuestro poruecto local

# Acceder al directorio
cd telazul/

# Iniciar Git
git init

# Agregar todos los archivos del directorio actual
git add .

# Guardar permanentemente
git commit -m "Commit inicial: agregando archivos"

# Cambiar el nombre de lo branch principal de master a main
git branch -m master main


crearemos nuestras llaves
# Crea las claves utilizando el algoritmo ed25519
ssh-keygen -t ed25519

guardar passsword de llave privada

copiamos nuestra llave publica
cat /home/tu-usuario/.ssh/id_ed25519.pub

pegarla en github Setings/ssh and gpg keys


subir el proyect
git remote add origin git@github.com:tu-usuario/tu-repositorio.git

git push -u -f origin main


/Clonar proyecto si te da problemas al clonar con git@github.com:joivesca/booker.git
Ã¡nade tu clave privada al agente
ssh-add ~/.ssh/id_ed25519

Verficar
ssh -T git@github.com

verificar el protocolo
git remote -v

si ves algo como http, puedes cambiar a ssh con

git remote set-url origin git@github.com:usuario/repositorio.git





Adding your SSH key to the ssh-agent

Before adding a new SSH key to the ssh-agent to manage your keys, you should have checked for existing SSH keys and generated a new SSH key.

    Start the ssh-agent in the background.

    $ eval "$(ssh-agent -s)"
    > Agent pid 59566


    Depending on your environment, you may need to use a different command. For example, you may need to use root access by running sudo -s -H before starting the ssh-agent, or you may need to use exec ssh-agent bash or exec ssh-agent zsh to run the ssh-agent.

Add your SSH private key to the ssh-agent.

If you created your key with a different name, or if you are adding an existing key that has a different name, replace id_ed25519 in the command with the name of your private key file.

ssh-add ~/.ssh/id_ed25519


